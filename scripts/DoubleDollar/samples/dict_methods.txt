__init(elements_)

toString()

* copy(span_)
  asNew
  asCopy
  asNonCopy

Conversion
  toString()
  asString

Accessing
  General
    size
    slots
    elements
    values
    keys
    isEmpty

  Generic
    at(index_span, absent_)
    atEach(indexers)

  By Key
    atKey(index, absent_)

  By Value Condition
    Answer Key
      keyWhere(scanDirective_, condition)
      keysOfWhere(scanDirective_, condition)

    Answer Value
      valueWhere(scanDirective_, condition, absent_)
      everyWhere(scanDirective_, conditional)
      everyWhereNot(scanDirective_, conditional)

      where   : "valueWhere"
      detect  : "valueWhere",
      find    : "valueWhere",
      select  : "everyWhere",
      reject  : "everyWhereNot"

    Answer Count
      countWhere(scanDirective_, conditional)


  By Value
    Answer Key
      keyOf(value, scanDirective_)
      keysOfEvery(value, scanDirective_)

    Answer Count
      countOf(value)
      contains(value)

Enumeration
  By Value
    eachDo(span_, action)
    elementsDo(span_, action)
    map(span_, action)
    eachSend(span_, method_selector, ...args)
    mapSend(span_, method_selector, ...args)

    reduce(startValue_, reducer)

    do      : "eachDo",
    collect : "map",
    inject  : "reduce",

Put
  Generic
    atPut(position, value)
    putAt(value, position)
    putAtEach(value, positions)
    putEachAtEach(value, positions)

  By Key
    putAtKey(value, key)

  By Value
   putAtValue
   putAtEvery(matchElement, newElement)

Add
  Generic
    add    : "addLast",
    addAll : "addAllLast",                   fill

Remove
  Generic
    removeAt(index_span)
    removeAtEach(indexers)
    removeEach(values)
    removeAll()
    empty

  By Key
    removeAtKey(key)

  By Value
    removeWhere(span_, condition)
    removeEveryWhere(span_, conditional)
    removeEveryWhereNot(span_, conditional)

    remove(value, scanDirective_)
    removeEvery(value)
